apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "de.markusressel.k4ever"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        def compileTime = new Date().format("yyyy-MM-dd_HH-mm-ss")
        setProperty("archivesBaseName", "k4ever-v${versionName}-(${versionCode})_${compileTime}")

        multiDexEnabled true

        // Required for LastAdapter
        dataBinding.enabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/core_release.kotlin_module'
        exclude 'META-INF/library-core_release.kotlin_module'
        exclude 'META-INF/library_release.kotlin_module'

        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/rxjava.properties'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation project(':data')
    implementation project(':rest')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "androidx.appcompat:appcompat:1.0.2"

    implementation "androidx.constraintlayout:constraintlayout:1.1.3"

    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "com.google.android.material:material:1.0.0"

    compileOnly "org.glassfish:javax.annotation:$javaxAnnotationVersion"

    // Dagger 2
    implementation "com.google.dagger:dagger:$dagger2Version"
    kapt "com.google.dagger:dagger-compiler:$dagger2Version"
    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$dagger2Version"
    implementation "com.google.dagger:dagger-android:$dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$dagger2Version"

    //the core iconcis library (without any widgets)
    implementation "com.mikepenz:iconics-core:${iconicsVersion}@aar"
    //this adds all ui view widgets (IconicsButton, IconicsImageView, ...)
    implementation "com.mikepenz:iconics-views:${iconicsVersion}@aar"
    implementation 'com.mikepenz:material-design-iconic-typeface:2.2.0.6-kotlin@aar'

    // RxLifecycle to prevent memory leaks
    def rxLifecycleVersion = rootProject.ext.rxLifecycleVersion
    implementation "com.trello.rxlifecycle2:rxlifecycle:$rxLifecycleVersion"
    implementation "com.trello.rxlifecycle2:rxlifecycle-kotlin:$rxLifecycleVersion"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:$rxLifecycleVersion"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android-lifecycle-kotlin:$rxLifecycleVersion"

    // Android Architecture Components
    implementation "androidx.core:core-ktx:1.0.2"

    // Logging
    api "com.github.ajalt:timberkt:${timberKtVersion}"

    // RxJava (RxKotlin actually)
    implementation "io.reactivex.rxjava2:rxjava:2.2.8"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}"

    // RxBinding
    // RxJava binding APIs for Android UI widgets from the platform and support libraries.
    implementation "com.jakewharton.rxbinding2:rxbinding:${rxBindingVersion}"
    implementation "com.jakewharton.rxbinding2:rxbinding-support-v4:${rxBindingVersion}"
    implementation "com.jakewharton.rxbinding2:rxbinding-design:${rxBindingVersion}"

    // RxBus (event bus)
    implementation 'com.eightbitlab:rxbus:1.0.2'

    // Material Drawer
    implementation("com.mikepenz:materialdrawer:${materialdrawerVersion}@aar") {
        transitive = true
    }

    // Increase/Decrease number
    implementation 'com.github.DanielMartinus:Stepper-Touch:0.8'

    // MeterNumberPicker
    implementation 'com.github.markusressel:meter-number-picker:divider'

    // Shine Button (fancy animated buttons)
    implementation 'com.github.ChadCSong:ShineButton:d992d78032'

    // Epoxy - RecyclerView
    api "com.airbnb.android:epoxy:$epoxyVersion"
    api "com.airbnb.android:epoxy-databinding:$epoxyVersion"
    implementation "com.airbnb.android:epoxy-paging:$epoxyVersion"
    kapt "com.airbnb.android:epoxy-processor:$epoxyVersion"

    // MaterialViewPager
    implementation 'com.github.florent37:materialviewpager:1.2.3'

    // Material Dialogs
    implementation 'com.afollestad.material-dialogs:core:2.6.0'

    // Context popup menus
    implementation 'com.github.zawadz88.materialpopupmenu:material-popup-menu:2.1.0'

    // Fresco (Image loading and Caching)
    implementation 'com.facebook.fresco:fresco:1.10.0'

    // AboutLibraries ("About" screen)
    implementation("com.mikepenz:aboutlibraries:$aboutlibrariesVersion@aar") {
        transitive = true
    }

    testImplementation 'junit:junit:4.12'
    androidTestImplementation "androidx.test:runner:1.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
}
